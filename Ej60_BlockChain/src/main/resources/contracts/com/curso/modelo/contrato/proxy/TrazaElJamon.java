package com.curso.modelo.contrato.proxy;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class TrazaElJamon extends Contract {
    public static final String BINARY = "60806040523480156200001157600080fd5b50604080516080810182526001818301908152600360fc1b6060830152815281516020818101845260008083529083019190915291519091906200005c90600360fc1b815260010190565b9081526020016040518091039020600082015181600001908051906020019062000088929190620007fd565b506020828101518051620000a39260018501920190620007fd565b5050604080516080810182526001818301908152603160f81b6060830152815281518083018352600681526546697374726f60d01b6020828101919091528201529051909150600090620000fe90603160f81b815260010190565b908152602001604051809103902060008201518160000190805190602001906200012a929190620007fd565b506020828101518051620001459260018501920190620007fd565b5050604080516080810182526001818301908152601960f91b6060830152815281518083018352600681526546697374726160d01b6020828101919091528201529051909150600090620001a090601960f91b815260010190565b90815260200160405180910390206000820151816000019080519060200190620001cc929190620007fd565b506020828101518051620001e79260018501920190620007fd565b5050604080516080810182526001818301818152600360fc1b606084015282528251602081810185526000825283015291519092506200022e90600360fc1b815260010190565b908152602001604051809103902060008201518160000190805190602001906200025a929190620007fd565b506020828101518051620002759260018501920190620007fd565b5050604080516080810182526001818301818152603160f81b606084015282528251808401845260098152680a6e45c40a6dad2e8d60bb1b6020828101919091528301529151909250620002d090603160f81b815260010190565b90815260200160405180910390206000820151816000019080519060200190620002fc929190620007fd565b506020828101518051620003179260018501920190620007fd565b5050604080516080810182526001818301908152600360fc1b606083015281528151602081810184526000825282015290519091506002906200036190600360fc1b815260010190565b908152602001604051809103902060008201518160000190805190602001906200038d929190620007fd565b506020828101518051620003a89260018501920190620007fd565b5050604080516080810182526001818301908152603160f81b6060830152815281518083018352601581527f4d6174616465726f2064652053616c616d616e6361000000000000000000000060208281019190915282015290519091506002906200041a90603160f81b815260010190565b9081526020016040518091039020600082015181600001908051906020019062000446929190620007fd565b506020828101518051620004619260018501920190620007fd565b5050604080516080810182526001818301908152601960f91b606083015281528151808301835260128152714d6174616465726f20646520c38176696c6160701b6020828101919091528201529051909150600290620004c890601960f91b815260010190565b90815260200160405180910390206000820151816000019080519060200190620004f4929190620007fd565b5060208281015180516200050f9260018501920190620007fd565b50506040805161012081018252600160e08201818152603160f81b61010084018190529083526000602080850182905284860191909152845180860186526002815261523160f01b81830152606085015284518086018652838152808201839052608085015284518086018652838152600360fc1b81830181905260a0860191909152855180870187528481529182015260c084015292519283529092506003910190815260200160405180910390206000820151816000019080519060200190620005dd929190620007fd565b50602082810151600183018054604086015115156101000261ff00199315159390931661ffff199091161791909117905560608301518051620006279260028501920190620007fd565b506080820151805162000645916003840191602090910190620007fd565b5060a0820151805162000663916004840191602090910190620007fd565b5060c0820151805162000681916005840191602090910190620007fd565b50506040805161012081018252600160e08201818152601960f91b61010084018190529083526000602080850182905284860191909152845180860186526002815261291960f11b81830152606085015284518086018652838152808201839052608085015284518086018652838152600360fc1b81830181905260a0860191909152855180870187528481529182015260c0840152925192835290925060039101908152602001604051809103902060008201518160000190805190602001906200074f929190620007fd565b50602082810151600183018054604086015115156101000261ff00199315159390931661ffff199091161791909117905560608301518051620007999260028501920190620007fd565b5060808201518051620007b7916003840191602090910190620007fd565b5060a08201518051620007d5916004840191602090910190620007fd565b5060c08201518051620007f3916005840191602090910190620007fd565b50905050620008df565b8280546200080b90620008a3565b90600052602060002090601f0160209004810192826200082f57600085556200087a565b82601f106200084a57805160ff19168380011785556200087a565b828001600101855582156200087a579182015b828111156200087a5782518255916020019190600101906200085d565b50620008889291506200088c565b5090565b5b808211156200088857600081556001016200088d565b600181811c90821680620008b857607f821691505b602082108103620008d957634e487b7160e01b600052602260045260246000fd5b50919050565b6109fa80620008ef6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806347a90ba714610051578063912026a914610066578063b7e7df3114610079578063ce647de01461008c575b600080fd5b61006461005f36600461077c565b6100b9565b005b610064610074366004610804565b610202565b610064610087366004610804565b610271565b61009f61009a366004610868565b6102e5565b6040516100b0959493929190610901565b60405180910390f35b6040518060e00160405280848152602001600015158152602001600015158152602001828152602001838152602001604051806040016040528060018152602001600360fc1b8152508152602001604051806040016040528060018152602001600360fc1b815250815250600384604051610134919061096e565b9081526020016040518091039020600082015181600001908051906020019061015e929190610640565b50602082810151600183018054604086015115156101000261ff00199315159390931661ffff1990911617919091179055606083015180516101a69260028501920190610640565b50608082015180516101c2916003840191602090910190610640565b5060a082015180516101de916004840191602090910190610640565b5060c082015180516101fa916005840191602090910190610640565b505050505050565b80600383604051610213919061096e565b90815260200160405180910390206004019080519060200190610237929190610640565b50600160038360405161024a919061096e565b908152604051908190036020019020600101805491151560ff199092169190911790555050565b80600383604051610282919061096e565b908152602001604051809103902060050190805190602001906102a6929190610640565b5060016003836040516102b9919061096e565b90815260405190819003602001902060010180549115156101000261ff00199092169190911790555050565b606080606080606060006003876040516102ff919061096e565b90815260200160405180910390206040518060e00160405290816000820180546103289061098a565b80601f01602080910402602001604051908101604052809291908181526020018280546103549061098a565b80156103a15780601f10610376576101008083540402835291602001916103a1565b820191906000526020600020905b81548152906001019060200180831161038457829003601f168201915b5050509183525050600182015460ff8082161515602084015261010090910416151560408201526002820180546060909201916103dd9061098a565b80601f01602080910402602001604051908101604052809291908181526020018280546104099061098a565b80156104565780601f1061042b57610100808354040283529160200191610456565b820191906000526020600020905b81548152906001019060200180831161043957829003601f168201915b5050505050815260200160038201805461046f9061098a565b80601f016020809104026020016040519081016040528092919081815260200182805461049b9061098a565b80156104e85780601f106104bd576101008083540402835291602001916104e8565b820191906000526020600020905b8154815290600101906020018083116104cb57829003601f168201915b505050505081526020016004820180546105019061098a565b80601f016020809104026020016040519081016040528092919081815260200182805461052d9061098a565b801561057a5780601f1061054f5761010080835404028352916020019161057a565b820191906000526020600020905b81548152906001019060200180831161055d57829003601f168201915b505050505081526020016005820180546105939061098a565b80601f01602080910402602001604051908101604052809291908181526020018280546105bf9061098a565b801561060c5780601f106105e15761010080835404028352916020019161060c565b820191906000526020600020905b8154815290600101906020018083116105ef57829003601f168201915b50505091909252505081516060830151608084015160a085015160c090950151929c919b5099509297509550909350505050565b82805461064c9061098a565b90600052602060002090601f01602090048101928261066e57600085556106b4565b82601f1061068757805160ff19168380011785556106b4565b828001600101855582156106b4579182015b828111156106b4578251825591602001919060010190610699565b506106c09291506106c4565b5090565b5b808211156106c057600081556001016106c5565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261070057600080fd5b813567ffffffffffffffff8082111561071b5761071b6106d9565b604051601f8301601f19908116603f01168101908282118183101715610743576107436106d9565b8160405283815286602085880101111561075c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561079157600080fd5b833567ffffffffffffffff808211156107a957600080fd5b6107b5878388016106ef565b945060208601359150808211156107cb57600080fd5b6107d7878388016106ef565b935060408601359150808211156107ed57600080fd5b506107fa868287016106ef565b9150509250925092565b6000806040838503121561081757600080fd5b823567ffffffffffffffff8082111561082f57600080fd5b61083b868387016106ef565b9350602085013591508082111561085157600080fd5b5061085e858286016106ef565b9150509250929050565b60006020828403121561087a57600080fd5b813567ffffffffffffffff81111561089157600080fd5b61089d848285016106ef565b949350505050565b60005b838110156108c05781810151838201526020016108a8565b838111156108cf576000848401525b50505050565b600081518084526108ed8160208601602086016108a5565b601f01601f19169290920160200192915050565b60a08152600061091460a08301886108d5565b828103602084015261092681886108d5565b9050828103604084015261093a81876108d5565b9050828103606084015261094e81866108d5565b9050828103608084015261096281856108d5565b98975050505050505050565b600082516109808184602087016108a5565b9190910192915050565b600181811c9082168061099e57607f821691505b6020821081036109be57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212205c9c92d61b04200c2d109cc91aeebcea72e455dd60c953feee2df2ea70a351ca64736f6c634300080d0033";

    public static final String FUNC_BUSCARCERDO = "buscarCerdo";

    public static final String FUNC_CREARCERDO = "crearCerdo";

    public static final String FUNC_SACRIFICARCERDO = "sacrificarCerdo";

    public static final String FUNC_VACUNARCERDO = "vacunarCerdo";

    @Deprecated
    protected TrazaElJamon(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected TrazaElJamon(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected TrazaElJamon(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected TrazaElJamon(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<Tuple5<String, String, String, String, String>> buscarCerdo(String _idCerdo) {
        final Function function = new Function(FUNC_BUSCARCERDO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_idCerdo)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple5<String, String, String, String, String>>(function,
                new Callable<Tuple5<String, String, String, String, String>>() {
                    @Override
                    public Tuple5<String, String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, String, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> crearCerdo(String _idCerdo, String _idGanadero, String _raza) {
        final Function function = new Function(
                FUNC_CREARCERDO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_idCerdo), 
                new org.web3j.abi.datatypes.Utf8String(_idGanadero), 
                new org.web3j.abi.datatypes.Utf8String(_raza)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> sacrificarCerdo(String _idCerdo, String _idMatadero) {
        final Function function = new Function(
                FUNC_SACRIFICARCERDO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_idCerdo), 
                new org.web3j.abi.datatypes.Utf8String(_idMatadero)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> vacunarCerdo(String _idCerdo, String _idVeterinario) {
        final Function function = new Function(
                FUNC_VACUNARCERDO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_idCerdo), 
                new org.web3j.abi.datatypes.Utf8String(_idVeterinario)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static TrazaElJamon load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new TrazaElJamon(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static TrazaElJamon load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new TrazaElJamon(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static TrazaElJamon load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new TrazaElJamon(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static TrazaElJamon load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new TrazaElJamon(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<TrazaElJamon> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(TrazaElJamon.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<TrazaElJamon> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(TrazaElJamon.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<TrazaElJamon> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(TrazaElJamon.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<TrazaElJamon> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(TrazaElJamon.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
